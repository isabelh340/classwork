   #alternate Edit this page Wikipedia (en) alternate copyright Wikipedia
   Atom feed

Attribute-oriented programming

   From Wikipedia, the free encyclopedia
   Jump to: navigation, search
             Programming paradigms
     * Action
     * Agent-oriented
     * Aspect-oriented
     * Automata-based
     * Concurrent computing
          + Relativistic programming
     * Data-driven
     * Declarative (contrast: Imperative)
          + Constraint
          + Dataflow
               o Flow-based
               o Cell-oriented (spreadsheets)
               o Reactive
          + Functional
               o Functional logic
          + Logic
               o Abductive logic
               o Answer set
               o Constraint logic
               o Functional logic
               o Inductive logic
     * End-user programming
     * Event-driven
          + Service-oriented
          + Time-driven
     * Expression-oriented
     * Feature-oriented
     * Function-level (contrast: Value-level)
     * Generic
     * Imperative (contrast: Declarative)
          + Procedural
     * Language-oriented
          + Natural language programming
          + Discipline-specific
          + Domain-specific
          + Grammar-oriented
               o Dialecting
          + Intentional
     * Metaprogramming
          + Automatic
          + Reflective
               o Attribute-oriented
          + Homoiconic
          + Template
               o Policy-based
     * Non-structured (contrast: Structured)
          + Array
     * Nondeterministic
     * Parallel computing
          + Process-oriented
     * Point-free style
          + Concatenative
     * Semantic
     * Structured (contrast: Non-structured)
          + Block-structured
          + Modular (contrast: Monolithic)
          + Object-oriented (OOP)
               o By separation of concerns:
                    # Aspect-oriented
                    # Role-oriented
                    # Subject-oriented
               o Class-based
               o Prototype-based
          + Recursive
     * Value-level (contrast: Function-level)
     * Probabilistic
     * Concept

     * v
     * t
     * e

   Attribute-oriented programming (AOP) is a program-level marking
   technique. Programmers can mark program elements (e.g. classes and
   methods) to indicate that they maintain application-specific or
   domain-specific semantics. For example, some programmers may define a
   "logging" attribute and associate it with a method to indicate the
   method should implement a logging function, while other programmers may
   define a "web service" attribute and associate it with a class to
   indicate the class should be implemented as a web service. Attributes
   separate application's core logic (or business logic) from
   application-specific or domain-specific semantics (e.g. logging and web
   service functions). By hiding the implementation details of those
   semantics from program code, attributes increase the level of
   programming abstraction and reduce programming complexity, resulting in
   simpler and more readable programs. The program elements associated
   with attributes are transformed to more detailed programs by a
   supporting tool (e.g. preprocessor). For example, a preprocessor may
   insert a logging program into the methods associated with a "logging"
   attribute.

Contents

     * 1 Attribute-oriented programming in various languages
          + 1.1 Java
          + 1.2 C#
          + 1.3 UML
     * 2 References
     * 3 Tools
     * 4 External links

Attribute-oriented programming in various languages[edit]

Java[edit]

   With the inclusion of The Metadata Facility for the Java Programming
   Language (JSR-175) into the J2SE 5.0 release it is possible to utilize
   attribute-oriented programming right out of the box. XDoclet library
   makes it possible to use attribute-oriented programming approach in
   earlier versions of Java.

C#[edit]

   The C# language has supported attributes from its very first release.
   However these attributes are used to give run-time information and are
   not used by a pre-processor (there isn't one in C#'s reference
   implementation).

UML[edit]

   The Unified Modeling Language (UML) supports a kind of attributes named
   Stereotypes.

References[edit]

   This article includes a list of references, related reading or external
   links, but its sources remain unclear because it lacks inline
   citations. Please improve this article by introducing more precise
   citations. (August 2009)
     * "Attribute-Oriented Programming". An Introduction to
       Attribute-Oriented Programming. Retrieved July 22, 2005.
     * Wada, Hiroshi; Suzuki, Junichi (2005). "Modeling Turnpike Frontend
       System: a Model-Driven Development Framework Leveraging UML
       Metamodeling and Attribute-Oriented Programming" (PDF). In Proc. of
       the 8th ACM/IEEE International Conference on Model Driven
       Engineering Languages and Systems (MoDELS/UML 2005).
     * Rouvoy, Romain; Merle, Philippe (2006). "Leveraging
       Component-Oriented Programming with Attribute-Oriented Programming"
       (PDF). In Proc. of the 11th ECOOP International Workshop on
       Component-Oriented Programming (WCOP 2006).

Tools[edit]

     * Annotation Processing Tool (apt)
     * Spoon, an Annotation-Driven Java Program Transformer
     * XDoclet, a Javadoc-Driven Program Generator

External links[edit]

     * Don Schwarz. Peeking Inside the Box: Attribute-Oriented Programming
       with Java5.
     * Sun JSR 175.
     * Attributes and Reflection - sample chapter from Programming C#
       book.
     * Modeling Turnpike Project.
     * Fraclet: An annotation-based programming model for the Fractal
       component model.
     * Attribute Enabled Software Development book

   Stub icon This software engineering–related article is a stub. You can
             help Wikipedia by expanding it.
               * v
               * t
               * e

   Stub icon This computer science article is a stub. You can help
             Wikipedia by expanding it.
               * v
               * t
               * e

   Retrieved from
   "http://en.wikipedia.org/w/index.php?title=Attribute-oriented_programmi
   ng&oldid=619992340"
   Categories:
     * Programming paradigms
     * Software engineering stubs
     * Computer science stubs

   Hidden categories:
     * Articles lacking in-text citations from August 2009
     * All articles lacking in-text citations
     * All stub articles
     * WikiProject Computer science stubs

Navigation menu

Personal tools

     * Create account
     * Log in

Namespaces

     * Article
     * Talk

Variants

Views

     * Read
     * Edit
     * View history

More

Search

   ____________________ Search Go

Navigation

     * Main page
     * Contents
     * Featured content
     * Current events
     * Random article
     * Donate to Wikipedia
     * Wikimedia Shop

Interaction

     * Help
     * About Wikipedia
     * Community portal
     * Recent changes
     * Contact page

Tools

     * What links here
     * Related changes
     * Upload file
     * Special pages
     * Permanent link
     * Page information
     * Wikidata item
     * Cite this page

Print/export

     * Create a book
     * Download as PDF
     * Printable version

Languages

     * Português
     *

   Edit links

     * This page was last modified on 5 August 2014 at 18:40.
     * Text is available under the Creative Commons Attribution-ShareAlike
       License; additional terms may apply. By using this site, you agree
       to the Terms of Use and Privacy Policy. Wikipedia® is a registered
       trademark of the Wikimedia Foundation, Inc., a non-profit
       organization.

     * Privacy policy
     * About Wikipedia
     * Disclaimers
     * Contact Wikipedia
     * Developers
     * Mobile view

     * Wikimedia Foundation
     * Powered by MediaWiki
